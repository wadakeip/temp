col_names = ['5年後の項目A','入院有無','性別','薬aの投薬回数','薬bの投薬回数', '項目A','項目B','項目C','項目D','項目E']
data = pd.DataFrame(index=range(SAMPLE_SIZE),columns=col_names)

# 入院有無
is_admission = bernoulli.rvs(0.2, size=SAMPLE_SIZE)
data['入院有無'] = is_admission

# 性別
sex = bernoulli.rvs(0.2, size=SAMPLE_SIZE)
data['性別'] = sex

# 薬aの投薬回数
medicate_a = np.random.geometric(0.4, SAMPLE_SIZE)
data['薬aの投薬回数'] = medicate_a

# 薬bの投薬回数
medicate_b = np.random.geometric(0.3, SAMPLE_SIZE)
data['薬bの投薬回数'] = medicate_b

# '項目A','項目B','項目C','項目E','項目F'
mean = np.array([23, 15, 14, 5, 100])
stdev = np.array([3.7, 1.5, 1.2, 1.1, 5.1])
corr = np.array([
                [1.00, 0.11, 0.14, 0.25, 0.16],
                [0.11, 1.00, 0.92, 0.17, 0.27],
                [0.14, 0.92, 1.00, 0.34, 0.42],
                [0.25, 0.17, 0.34, 1.00, 0.53],
                [0.16, 0.27, 0.42, 0.53, 1.00]]) # BとCの相関が高い
cov = np.dot(np.diag(stdev),np.dot(corr,np.diag(stdev)))
item_data = np.random.multivariate_normal(mean, cov, size=SAMPLE_SIZE)
data[['項目A','項目B','項目C','項目D','項目E']]=item_data

# 数値型の説明変数の標準化
from sklearn.preprocessing import StandardScaler
num_data = data[['薬aの投薬回数','薬bの投薬回数', '項目A','項目B','項目C','項目D','項目E']]
scaler = StandardScaler()

data['5年後の項目A'] = 0.10 + 0.50 * data['入院有無'] + 0.50 * data['性別'] * data['薬aの投薬回数'] +  0.10 * data['薬bの投薬回数'] \
+ 0.20 * (data['項目A']**2) + 0.30 * data['項目B'] + 0.00 * data['項目C'] + 0.10 * data['項目D'] + 0.10 * data['項目E'] + 0.10 * data['項目D'] * data['項目E']

data.head(2)
